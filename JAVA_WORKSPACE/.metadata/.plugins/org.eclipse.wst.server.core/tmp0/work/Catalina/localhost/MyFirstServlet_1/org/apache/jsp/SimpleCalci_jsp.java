/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.109
 * Generated at: 2024-06-20 06:22:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class SimpleCalci_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

 
        String Ipnum1;
        String Ipnum2;
        String ops;
    
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Simple Calculator Results</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <h2>Simple Calculator Operation Result</h2>\r\n");
      out.write("    ");

        String Ipnum1 = request.getParameter("num1");
        String Ipnum2 = request.getParameter("num2");
        String  ops = request.getParameter("btn");

            if (ops != null || Ipnum1 != null || Ipnum2 != null) {
            	int num1 = Integer.parseInt(Ipnum1);
            	int num2 = Integer.parseInt(Ipnum2);
            	
                if (ops.equals("add")) {   
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                    <p>Sum of ");
      out.print( num1 );
      out.write(" and ");
      out.print( num2 );
      out.write(' ');
      out.write(':');
      out.write(' ');
      out.print( num1 + num2 );
      out.write("</p>\r\n");
      out.write("                    \r\n");
      out.write("    ");
		} else if (ops.equals("sub")) {  
      out.write("\r\n");
      out.write("    \r\n");
      out.write("                    <p>Difference of ");
      out.print( num1 );
      out.write(" and ");
      out.print( num2 );
      out.write(' ');
      out.write(':');
      out.write(' ');
      out.print( num1 - num2 );
      out.write("</p>\r\n");
      out.write("                    \r\n");
      out.write("    ");
		} else if (ops.equals("mul")) {   
      out.write("\r\n");
      out.write("    \r\n");
      out.write("                    <p>Product of ");
      out.print( num1 );
      out.write(" and ");
      out.print( num2 );
      out.write(' ');
      out.write(':');
      out.write(' ');
      out.print( num1 * num2 );
      out.write("</p>\r\n");
      out.write("                    \r\n");
      out.write("    ");
		} else if (ops.equals("div")) { 
                    if (num2 != 0) {
                        double result = (double) num1 / num2;  
      out.write("\r\n");
      out.write("                        \r\n");
      out.write("                        <p>Quotient of ");
      out.print( num1 );
      out.write(" and ");
      out.print( num2 );
      out.write(' ');
      out.write(':');
      out.write(' ');
      out.print( result );
      out.write("</p>\r\n");
      out.write("                        \r\n");
      out.write("    ");
		} else { 	
      out.write("\r\n");
      out.write("    \r\n");
      out.write("                      <p>Error: Division by zero is not allowed.</p>\r\n");
      out.write("    ");
		}
                } else { 	
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                    <p>Error: Invalid operation.</p>\r\n");
      out.write("                    \r\n");
      out.write("    ");
		}
            	} else {  	
      out.write("\r\n");
      out.write("            \t\r\n");
      out.write("                <p>Error: Invalid Input.</p>\r\n");
      out.write("                \r\n");
      out.write("    ");
		}	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
